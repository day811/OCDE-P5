# parent      : sting                 root for master document , master document name if nested
# doc         : string                (sub)/document name  ROOT for master document
# type        (str,int,float,date)    default : "str"      atribute type
# index       (true/false)            default : false      if true, attribute is also an index
# primary       (true/false)          default : false      if present, the field is part of the given doc primary key 
# replace       (true/false)          default : false      if false exclude document from migration else replace value string or null
# error_mask    mask error : {function : mask_func, param : func_param     
#               default  {function : is_na, param = null}  look at FieldManager classes (buildin : is_na, is_in, is_inrange,compare)
# required      (true/false)          default : true       if required in DBMongo schema validation

"_id_care":
        parent: root
        doc: care
        primary: billing
"Name":   
        parent: care
        doc: patient
        index: true
        primary: care
       
"Age": 
        parent: care
        doc: patient
        type: int
        replace: null
        error_mask: 
                function: is_inrange
                param: [1,120]
                
"Gender": 
        parent: care
        doc: patient 
        index: true
        primary: care 
        error_mask: 
                function: is_in
                param: ["Male", "Female"]
        
"Blood Type": 
        parent: care
        doc: patient 
        replace: null 
        error_mask: 
                function: is_in
                param: ["A+", "A-", "AB+", "AB-", "B+", "B-", "O+", "O-"]
                
"Date of Admission": 
        parent: care
        doc: admission 
        type: date 
        primary: care
                        
"Doctor": 
        parent: care
        doc: admission 
        index: true 
        primary: care
        
"Hospital":   
        parent: care
        doc: admission 
        index: true 
        primary: care
                
"Room Number": 
        parent: care
        doc: admission 
        type: int
        replace: null
                        
"Admission Type": 
        parent: care
        doc: admission 
        index: true
        error_mask: 
                function: is_in
                param: ['Elective', 'Emergency', 'Urgent']
                        
"Discharge Date": 
        parent: care
        doc: admission 
        type: date 
        replace: null
                        
"_id_billing":
        parent : root
        doc : billing
        primary: observation
"Insurance Provider": 
        parent: root
        doc: billing 
        replace: null
                        
"Billing Amount": 
        parent: root
        doc: billing 
        type: float
        replace: null 
'_id_obs':
        parent: root
        doc: observation                                                
"Medical Condition": 
        parent: root
        doc: observation 
        index: true 
        primary: care
                         
"Medication": 
        parent: root
        doc: observation
                 
"Test Results": 
        parent: root
        doc: observation
        error_mask: 
                function: is_in
                param: ['Abnormal', 'Inconclusive', 'Normal']
                           
        

